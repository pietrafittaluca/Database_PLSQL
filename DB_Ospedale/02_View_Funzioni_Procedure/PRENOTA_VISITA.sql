CREATE OR REPLACE PROCEDURE PRENOTA_VISITA
(CF_PAZ IN VARCHAR, TIPO IN VARCHAR)
IS
DATA		DATE;
C		NUMBER;
CF_MED		PERSONA.CF%TYPE;
BEGIN
	--Ricerca della prima data disponibile (limite di 10 visite al giorno)
BEGIN
	SELECT MAX(DATA_ORA_PREVISTA) INTO DATA FROM VISITA
	WHERE to_date(DATA_ORA_PREVISTA, 'dd-mm-yyyy') = (
	SELECT MIN(DATA_P) FROM (
	SELECT to_date(DATA_ORA_PREVISTA, 'dd-mm-yyyy') AS DATA_P, COUNT(*) AS C FROM VISITA
	GROUP BY to_date(DATA_ORA_PREVISTA, 'dd-mm-yyyy'))
	WHERE C < 10);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	DATA := NULL;
END;
CASE
WHEN DATA IS NULL THEN
		SELECT COUNT(*) INTO C FROM VISITA;
		IF(C = 0) THEN
--Se non ci sono registrate la visita viene prenotata a un ora dall orario corrente
		DATA := to_date(SYSDATE, 'dd-mm-yyyy HH24:mi:ss') + 1/24;
		ELSE
--Se non ci sono date disponibili si prenota per il giorno successivo all ultima data registrata
		SELECT MAX(DATA_ORA_PREVISTA) INTO DATA FROM VISITA;
		DATA := DATA + 1;
		END IF;
ELSE
--Se si trova una data disponibile, la visita viene prenotata per l ora successiva all ultima visita registrata per quella giornata
DATA := DATA + 1/24;
END CASE;
DBMS_OUTPUT.PUT_LINE('PRIMA DATA DISPONIBILE PER LA VISITA: ' || to_char(DATA, 'dd-mm-yyyy HH24:mi:ss'));
--Assegnazione medico
--Il medico viene scelto casualmente tra i medici che nella data della visita non sono impegnati in interventi.
--Nel caso di una visita cardiologica o neurologica si scelgono solo medici con le relative specializzazioni,
--altrimenti si sceglie un medico qualsiasi.
IF(TIPO = 'Cardiologica') THEN
	SELECT CF INTO CF_MED FROM (
		SELECT CF, SPECIALIZZAZIONE, DATA_PREVISTA FROM
			(SELECT M.CF_MED AS CF, SPECIALIZZAZIONE, ID_INTERVENTO AS IDINT FROM
			MEDICO M LEFT JOIN EFFETTUA E ON M.CF_MED = E.CF_MED)
		LEFT JOIN INTERVENTO I ON IDINT = I.ID_INTERVENTO
		WHERE SPECIALIZZAZIONE = 'Cardiologia' AND DATA_PREVISTA IS NULL OR 
		SPECIALIZZAZIONE = 'Cardiologia' AND DATA_PREVISTA <> DATA
		ORDER BY DBMS_RANDOM.VALUE)
	WHERE ROWNUM = 1;
ELSIF(TIPO = 'Neurologica') THEN
	SELECT CF INTO CF_MED FROM (
		SELECT CF, SPECIALIZZAZIONE, DATA_PREVISTA FROM 
			(SELECT M.CF_MED AS CF, SPECIALIZZAZIONE, ID_INTERVENTO AS IDINT FROM
			MEDICO M LEFT JOIN EFFETTUA E ON M.CF_MED = E.CF_MED)
		LEFT JOIN INTERVENTO I ON IDINT = I.ID_INTERVENTO
		WHERE SPECIALIZZAZIONE = 'Neurologia' AND DATA_PREVISTA IS NULL OR 
		SPECIALIZZAZIONE = 'Neurologia' AND DATA_PREVISTA <> DATA
		ORDER BY DBMS_RANDOM.VALUE)
	WHERE ROWNUM = 1;
ELSE
	SELECT CF INTO CF_MED FROM (
		SELECT CF, SPECIALIZZAZIONE, DATA_PREVISTA FROM
			(SELECT M.CF_MED AS CF, SPECIALIZZAZIONE, ID_INTERVENTO AS IDINT FROM
			MEDICO M LEFT JOIN EFFETTUA E ON M.CF_MED = E.CF_MED)
		LEFT JOIN INTERVENTO I ON IDINT = I.ID_INTERVENTO
		WHERE DATA_PREVISTA IS NULL OR DATA_PREVISTA <> DATA
		ORDER BY DBMS_RANDOM.VALUE)
	WHERE ROWNUM = 1;
END IF;
INSERT INTO VISITA(DATA_ORA_PREVISTA, DATA_ORA_EFFETTIVA, TIPO_VISITA, CF_PAZ, CF_MED, ID_RICOVERO)
 VALUES(DATA, NULL, TIPO, CF_PAZ, CF_MED, NULL);
EXCEPTION
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('AL MOMENTO NON CI SONO MEDICI DISPONIBILI PER EFFETTUARE VISITE.');
END;
/
